# Dependencies
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*
pnpm-debug.log*
lerna-debug.log*

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Build outputs
.output/
.vercel/
.netlify/
.wrangler/
/.svelte-kit/
/build/
dist/
.vite/

# Environment files
.env
.env.local
.env.development.local
.env.test.local
.env.production.local
.env.*
!.env.example
!.env.test

# Operating System
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db
Desktop.ini

# IDEs and editors
.vscode/settings.json
.vscode/launch.json
.vscode/extensions.json
*.code-workspace
.idea/
*.swp
*.swo
*~
.project
.classpath
.settings/

# Logs
logs/
*.log

# Supabase
.supabase/
supabase/.branches/
supabase/.temp/

# Database files
*.sqlite
*.sqlite3
*.db

# Testing
coverage/
*.lcov
.nyc_output/
cypress/downloads/
cypress/screenshots/
cypress/videos/
test-results/
playwright-report/

# Temporary files and caches
temp/
tmp/
*.tmp
*.temp
.cache/
.parcel-cache/
.eslintcache
.stylelintcache

# Vite
vite.config.js.timestamp-*
vite.config.ts.timestamp-*

# TypeScript
*.tsbuildinfo
.tscache/

# Package manager locks (choose one approach)
# Option 1: If using npm, ignore others
# yarn.lock
# pnpm-lock.yaml
# Option 2: If using yarn, ignore others  
# package-lock.json
# pnpm-lock.yaml
# Option 3: If using pnpm, ignore others
# package-lock.json
# yarn.lock

# Development and local files
NOTES.md
DEV_NOTES.md
TODO.md
.local/
local/

# Image processing and uploads
/temp-images/
/processed-images/
/test-uploads/
/uploads/temp/

# Backup files
*.backup
*.bak
*.old

# Chat logs and documentation drafts
/chat-logs-temp/
/docs-draft/

# Mac specific
.AppleDouble
.LSOverride
Icon

# Windows specific
Thumbs.db
ehthumbs.db
Desktop.ini
$RECYCLE.BIN/
*.cab
*.msi
*.msix
*.msm
*.msp
*.lnk

# Linux specific
*~
.fuse_hidden*
.directory
.Trash-*
.nfs*